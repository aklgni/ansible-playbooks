---
- name: install ambari-server
  yum: name=ambari-server state=latest

- name: Ensure ambari-server is stopped
  service: name=ambari-server state=stopped

- name : Create folder
  file : dest=/opt/ambari-install state=directory mode=0755

- name: configure ambari-server
  shell: creates=/opt/ambari-install/ansible.done ambari-server setup -j {{ java_home }} -s > /tmp/ambari-install-output executable=/bin/bash
  environment:
    JAVA_HOME: "{{ java_home }}"

- name : check if ambari-server is installed
  wait_for : path=/tmp/ambari-install-output search_regex="completed successfully"

- name: copy cluster.env file
  copy: src=cluster-env.xml dest=/var/lib/ambari-server/resources/stacks/HDP/2.0.6/configuration/cluster-env.xml

- name: copy repo.xml
  template: src=repoinfo.xml.j2 dest=/var/lib/ambari-server/resources/stacks/HDP/2.3/repos/repoinfo.xml

- name : start ambari server and enabled at reboot
  service : name=ambari-server state=restarted enabled=yes

- name : check if ambari-server is up
  wait_for : host=127.0.0.1 port=8080 delay=10

- name : wait for agents to register
  command : sleep 10

- name : copy hosts_map to ambari-server
  template: src=hosts-map.json.j2 dest=/opt/ambari-install/hosts-map.json

- name : copy stack definition to ambari-server
  template : src=multi-nodes-hdp.json.j2 dest=/opt/ambari-install/multi-nodes-hdp.json

- name : Copy blueprint push
  template : src=PushBlueprint.py.j2 dest=/opt/ambari-install/PushBlueprint.py mode=0755

- name : Install python-requests
  yum : name=python-requests

- name: copy HDP repo
  unarchive: src=/var/www/html/HDP.tgz dest=/var/www/html/

- name : Launch blueprint
  shell : /opt/ambari-install/PushBlueprint.py

- name: Install  http
  yum: name=httpd state=latest

- name: start httpd
  service: name=httpd state=started
